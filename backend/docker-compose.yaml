# HOW TO START
# docker-compose up (-d)
# docker-compose down
# just build: docker-compose build

# refers to the docker-compose version and this determines the syntax of the code
version: '3.8'
services: 
  # 2 blanks indentation
  mongodb:
    image: "mongo"
    volumes:
      - data:/data/db
    environment:
      # - MONGO_INITDB_ROOT_USERNAME=max
      MONGO_INITDB_ROOT_USERNAME: max
      MONGO_INITDB_ROOT_PASSWORD: secret
    # env_file: either env_file or environment
      # - ./config/config.env    
    # networks: unnecessary bc docker compose alr lumps all the services in this file in the same network
  backend:
    build: ./backend
    # build: 
    # context must be higher level than all the files u need in the Dockerfile
      # context: ./backend
      # dockerfile: Dockerfile
      # args:
      #   - name=value
    ports:
      - '80:80'
      - '90:90'
    volumes:
      - logs:/app/logs
      # can just use relative path for bind mounts in docker-compose
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./env/backend.env
    depends_on: 
      - mongodb
  frontend:
  # note: docker-compose does not always rebuild. only rebuild if necessary
    build: ./frontend
    ports: 
      - '3000:3000'
    volumes:
    # bind mount
      - ./frontend/src:/app/src
    stdin_open: true
    tty: true
    depends_on:
      - backend
    
volumes:
# name of the volumes (named volumes only)
  data:
  logs: